```
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(-11.74, -2.5, -13.75, -8.83, -5.5, -9, -2.75, -7.62, -5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
#ylab="Low Hearing (independant contrast)",
#xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
Sum1
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(-11.74, -2.5, -13.75, -8.83, -5.5, -9, -2.75, -7.62, -5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, 5.25, 24.5, 7.37, 25.31, 4.78)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF2)
```{r}
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, 5.25, 24.5, 7.37, 25.31, 4.78)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF2)
Sum1
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(-39.01, -5, -51.5, -52.48, -5.25, -24.5, -7.37, -25.31, -4.78)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.84
Sum1 <- summary(LineBF2)
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, -5.5, 9, -2.75, -7.62, 5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
Sum1
```{r}
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
IsolationCallIC <- c(-1.49, 2.5, 15.25, 14.51, 8, 10, -6, -9, 4.12)
# plot low hearing by isolation call:
plot(x=LowHearingIC, y=IsolationCallIC,
font.lab=2,
pch=19,
ylab="Isolation Call (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Isolation Call IC by Low Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF3 <- lm(IsolationCallIC~LowHearingIC)
line<-abline(LineBF3, col = "blue", lwd=3)
# summary of model R-square = 0.84
Sum2 <- summary(LineBF3)
Sum2
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, -5.25, 24.5, 7.37, 25.31, 4.78)
# plot Echo Location by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.84
Sum2 <- summary(LineBF2)
Sum2
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, -5.5, 9, -2.75, -7.62, 5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.536
Sum1 <- summary(Li
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, -5.25, 24.5, 7.37, 25.31, 4.78)
# plot Echo Location by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.848
Sum2 <- summary(LineBF2)
```{r}
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
IsolationCallIC <- c(-1.49, 2.5, 15.25, 14.51, 8, 10, -6, -9, 4.12)
# plot low hearing by isolation call:
plot(x=LowHearingIC, y=IsolationCallIC,
font.lab=2,
pch=19,
ylab="Isolation Call (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Isolation Call IC by Low Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF3 <- lm(IsolationCallIC~LowHearingIC)
line<-abline(LineBF3, col = "blue", lwd=3)
# summary of model R-square = 0.078
Sum3 <- summary(LineBF3)
$$/frac{E_l}{h_l}$$
$$ \[\frac{E_l}{h_l}\] $$
ringIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, -5.5, 9, -2.75, -7.62, 5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.536
Sum1 <- summary(LineBF)
```
print(Sum1)
num <- c(7, 3, 6, 4, 7, 3, 3, 5, 9, 11, 7, 6, 5, 4, 4)
num
mean(num)
sd(num)
install.packages("knitr")
library(knitr)
ls()
rm(list=ls())
setwd("~/Desktop/QueenExperimentBurnham")
QueenDF <- read.table("2016QueensHam.csv", header=TRUE, sep = ",")
PollenDF <- read.table("PollenQueens.csv", header=TRUE, sep = ",")
library(plyr)
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(dplyr)
library(scales)
aov.out <- aov(Mass~Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
aov.out <- aov(Brood ~ Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
MassSummary <- ddply(QueenDF, c("Origin", "MassDay"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm = TRUE),
sd = sd(Mass, na.rm = TRUE),
se = sd / sqrt(n))
MassSummary <- MassSummary[-c(5,10),]
print(MassSummary)
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = NULL, y = "Colony Mass (lbs)", group="the") + coord_cartesian(ylim = c(20, 80), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(.15, .75), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + labs(linetype="Queen Origin") + annotate(geom = "text", x = 70, y = 75, label = "(a)",cex = 6)
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
print(BroodSummary)
plot1 <- ggplot(data = BroodSummary,
aes(x = BroodDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Frames of Brood") + coord_cartesian(ylim = c(2, 7), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(3, 3), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + annotate(geom = "text", x = 70, y = 6.5, label = "(b)",cex = 6)
library(gridExtra)
grid.newpage()
grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
library(gridExtra)
grid.newpage()
grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
ls()
rm(list=ls())
setwd("~/Desktop/QueenExperimentBurnham")
QueenDF <- read.table("2016QueensHam.csv", header=TRUE, sep = ",")
PollenDF <- read.table("PollenQueens.csv", header=TRUE, sep = ",")
VirusDF <- read.table("RNAVirus.csv", header=TRUE, sep = ",")
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(scales)
aov.out <- aov(Mass~Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
aov.out <- aov(Brood ~ Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
MassSummary <- ddply(QueenDF, c("Origin", "MassDay"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm = TRUE),
sd = sd(Mass, na.rm = TRUE),
se = sd / sqrt(n))
MassSummary <- MassSummary[-c(5,10),]
print(MassSummary)
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = NULL, y = "Colony Mass (lbs)", group="the") + coord_cartesian(ylim = c(20, 80), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(.15, .75), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + labs(linetype="Queen Origin") + annotate(geom = "text", x = 70, y = 75, label = "(a)",cex = 6)
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
print(BroodSummary)
plot1 <- ggplot(data = BroodSummary,
aes(x = BroodDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Frames of Brood") + coord_cartesian(ylim = c(2, 7), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(3, 3), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + annotate(geom = "text", x = 70, y = 6.5, label = "(b)",cex = 6)
library(gridExtra)
grid.newpage()
grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
plot
p <- grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
p
library(gridExtra)
grid.newpage()
p <- grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
p
Resp <- runif(10)
print(Resp)
plot(x=Time, y=Resp, type="b")
Time <- seq(1,10) # seq makes integer sequence!
print(Time) # PRINT IT!
Resp <- runif(10) # get 10 random numbers
print(Resp) # print it
plot(x=Time, y=Resp, type="b")
ls()
rm(list=ls())
setwd("~/AndreCollaborations/QueenExperimentBurnham")
QueenDF <- read.table("2016QueensHam.csv", header=TRUE, sep = ",", stringsAsFactors = FALSE)
PollenDF <- read.table("PollenQueens.csv", header=TRUE, sep = ",")
VirusDF <- read.table("RNAVirus.csv", header=TRUE, sep = ",")
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(scales)
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
print(BroodSummary)
plot1 <- ggplot(data = BroodSummary,
aes(x = BroodDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Frames of Brood") + coord_cartesian(ylim = c(2, 7), xlim = c(-10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + annotate(geom = "text", x = 70, y = 6.5, label = "(b)",cex = 6)
plot1
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(2, 7), xlim = c(-10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
MassSummary <- ddply(QueenDF, c("Origin", "MassDay"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm = TRUE),
sd = sd(Mass, na.rm = TRUE),
se = sd / sqrt(n))
MassSummary <- MassSummary[-c(5,10),]
print(MassSummary)
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(2, 7), xlim = c(-10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
plit
plot
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(20, 80), xlim = c(0,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
plot
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(20, 80), xlim = c(0,60)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
plot
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(20, 70), xlim = c(0,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
plot
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(20, 70), xlim = c(5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
plot
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(20,60), xlim = c(5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
plot
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Colony Mass (lbs)") + coord_cartesian(ylim = c(20,70), xlim = c(5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
plot
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
print(BroodSummary)
plot1 <- ggplot(data = BroodSummary,
aes(x = BroodDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Frames of Brood") + coord_cartesian(ylim = c(2, 7), xlim = c(-10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(3, 3), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10))
plot1
ggplot(data = VarroaSummary,
aes(x = VarroaDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
VarroaSummary <- ddply(QueenDF, c("Origin", "VarroaDay"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm = TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
VarroaSummary <- VarroaSummary[-c(5,10),]
print(VarroaSummary)
ggplot(data = VarroaSummary,
aes(x = VarroaDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
NosemaSummary <- ddply(QueenDF, c("Origin", "NosemaDay"), summarise,
n = length(Nosema),
mean = mean(Nosema, na.rm = TRUE),
sd = sd(Nosema, na.rm = TRUE),
se = sd / sqrt(n))
NosemaSummary <- NosemaSummary[-c(4,8),]
NosemaSummary$NosemaDay <- as.character(NosemaSummary$NosemaDay)
print(NosemaSummary)
colors <- c("white", "gray32")
ggplot(NosemaSummary, aes(x=NosemaDay, y=mean, fill=Origin)) +
geom_bar(stat="identity", col="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="Time (days after requeening)", y = "Nosema Load (spores/bee)") + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 4300000)) + scale_fill_manual(values=colors, name="Queen Origin", labels=c("California", "Local")) + theme(legend.position=c(.8, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = NosemaSummary,
aes(x = NosemaDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Nosema Load (spores/bee)") + coord_cartesian(ylim = c(0, 4300000), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
ggplot(data = NosemaSummary,
aes(x = NosemaDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Nosema Load (spores/bee)") + coord_cartesian(ylim = c(0, 4300000), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
NosemaSummary <- ddply(QueenDF, c("Origin", "NosemaDay"), summarise,
n = length(Nosema),
mean = mean(Nosema, na.rm = TRUE),
sd = sd(Nosema, na.rm = TRUE),
se = sd / sqrt(n))
NosemaSummary <- NosemaSummary[-c(4,8),]
print(NosemaSummary)
ggplot(data = NosemaSummary,
aes(x = NosemaDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Nosema Load (spores/bee)") + coord_cartesian(ylim = c(0, 4300000), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.15, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
PollenSummary <- ddply(PollenDF, c("Origin", "Week"), summarise,
n = length(Pollen),
mean = mean(Pollen, na.rm = TRUE),
sd = sd(Pollen, na.rm = TRUE),
se = sd / sqrt(n))
print(PollenSummary)
ggplot(data = PollenSummary,
aes(x = Week,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (weeks after requeening)", y = "Pollen Mass (grams)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,9)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=9)) + labs(linetype="Queen Origin")
VirusSummary <- ddply(VirusDF, c("Origin", "Virus", "Time"), summarise,
n = length(IntensityMult),
mean = mean(IntensityMult, na.rm = TRUE),
sd = sd(IntensityMult, na.rm = TRUE),
se = sd / sqrt(n))
splitVir <- split(VirusSummary, VirusSummary$Virus)
colors <- c("white", "gray32")
VirusSummary <- ddply(VirusDF, c("Origin", "Virus", "Time"), summarise,
n = length(IntensityMult),
mean = mean(IntensityMult, na.rm = TRUE),
sd = sd(IntensityMult, na.rm = TRUE),
se = sd / sqrt(n))
splitVir <- split(VirusSummary, VirusSummary$Virus)
VirusDF$IntensityMult <- VirusDF$Band_Intensity*10^6
VirusDFsplit <- split(VirusDF, VirusDF$Virus)
aov.out <- aov(IntensityMult ~ Origin * Time + Error(ID), data=VirusDFsplit$DWV)
summary(aov.out)
aov.out <- aov(IntensityMult ~ Origin * Time + Error(ID), data=VirusDFsplit$BQCV)
summary(aov.out)
aov.out <- aov(IntensityMult ~ Origin * Time + Error(ID), data=VirusDFsplit$IAPV)
summary(aov.out)
VirusSummary <- ddply(VirusDF, c("Origin", "Virus", "Time"), summarise,
n = length(IntensityMult),
mean = mean(IntensityMult, na.rm = TRUE),
sd = sd(IntensityMult, na.rm = TRUE),
se = sd / sqrt(n))
splitVir <- split(VirusSummary, VirusSummary$Virus)
colors <- c("white", "gray32")
p1 <- ggplot(splitVir$DWV, aes(x=Time, y=mean, fill=Origin)) +
geom_bar(stat="identity", col="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="DWV", y = "Viral Load (band intensity)") + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 4000000)) + scale_fill_manual(values=colors, name="Queen Origin", labels=c("California", "Local")) + theme(legend.position=c(.5, .9), panel.border = element_blank(),
axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 <- ggplot(splitVir$BQCV, aes(x=Time, y=mean, fill=Origin)) +
geom_bar(stat="identity", col="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="BQCV", y = NULL) + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 4000000)) + scale_fill_manual(values=colors, name="Queen Origin", labels=c("California", "Local")) + theme(legend.position=c(3, 3),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + annotate("segment", x = .5, xend = 2.5, y = 3900000, yend = 3900000) + annotate("segment", x = .5, xend = 1.4, y = 1500000, yend = 1500000) + annotate("segment", x = 1.5, xend = 2.5, y = 3600000, yend = 3600000) + annotate(geom = "text", x = 1.5, y = 4000000, label = "***",cex = 6) + annotate(geom = "text", x = 1, y = 1650000, label = "ns",cex = 5) + annotate(geom = "text", x = 2, y = 3750000, label = "ns",cex = 5)
p3 <- ggplot(splitVir$IAPV, aes(x=Time, y=mean, fill=Origin)) +
geom_bar(stat="identity", col="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="IAPV", y = NULL) + theme_classic(base_size = 17) + coord_cartesian(ylim = c(0, 4000000)) + scale_fill_manual(values=colors, name="Queen Origin", labels=c("California", "Local")) + theme(legend.position=c(3, 3),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + annotate("segment", x = .5, xend = 2.5, y = 3100000, yend = 3100000) + annotate("segment", x = .5, xend = 1.4, y = 2200000, yend = 2200000) + annotate("segment", x = 1.5, xend = 2.5, y = 2800000, yend = 2800000) + annotate(geom = "text", x = 1.5, y = 3250000, label = "ns",cex = 5) + annotate(geom = "text", x = 1, y = 2300000, label = "**",cex = 6) + annotate(geom = "text", x = 2, y = 2900000, label = "**",cex = 6)
grid.newpage()
grid.draw(cbind(ggplotGrob(p1), ggplotGrob(p2), ggplotGrob(p3), size = "last"))
