meanCI <- mean(DF$FoldChangeBack)
n <- length(DF$FoldChangeBack)
s <- sd(DF$FoldChangeBack)
MOE <- qnorm(0.975)*s/sqrt(n)
MOE
meanCI <- mean(DF$FoldChangeBack)
n <- length(DF$FoldChangeBack)
s <- sd(DF$FoldChangeBack)
MOE <- qnorm(0.975)*s/sqrt(n)
upper <- meanCI + MOE
lower <- meanCI - MOE
meanCI
upper
lower
plot1 <- ggplot(DF1, aes(x=Gene, y=mean, fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.4, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:", labels=c("Apiary Absent", "Apiary Present")) + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = 0, xend = 2, y = meanCI, yend = meanCI, col = "red")
colors <- c("slategray3", "dodgerblue4")
plot1 <- ggplot(DF1, aes(x=Gene, y=mean, fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.4, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:", labels=c("Apiary Absent", "Apiary Present")) + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = 0, xend = 3, y = meanCI, yend = meanCI, col = "red")
plot1 <- ggplot(DF1, aes(x=Gene, y=mean, fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.4, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:", labels=c("Apiary Absent", "Apiary Present")) + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red")
plot1 <- ggplot(DF1, aes(x=Gene, y=mean, fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.4, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:", labels=c("Apiary Absent", "Apiary Present")) + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2)
plot1 <- ggplot(DF1, aes(x=Gene, y=mean, fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.4, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2)
plot1 <- ggplot(DF1, aes(x=Gene, y=mean, fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.4, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
pallet
colors <- c("slategray3", "dodgerblue4")
#Create a bar graph for with CI and SE bars
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
colors <- c("slategray3", "dodgerblue4")
#Create a bar graph for with CI and SE bars
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
colors <- c("slategray3", "dodgerblue4")
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
color = "black",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
head(DF)
HealthStat <- rep(c("Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Healthy"),2)
FoldChange <- rnorm(40, mean = 0, sd = 2)
FoldChangeBack <- rnorm(40, mean = 0, sd = 2)
Gene <- c(rep("Gene1", 20), rep("Gene2", 20))
DF <- data.frame(Gene, HealthStat, FoldChange, FoldChangeBack)
DF1 <- ddply(DF, c("HealthStat", "Gene"), summarise,
n = length(FoldChange),
mean = mean(FoldChange, na.rm=TRUE),
sd = sd(FoldChange, na.rm=TRUE),
se = sd / sqrt(n))
meanCI <- mean(DF$FoldChangeBack)
n <- length(DF$FoldChangeBack)
s <- sd(DF$FoldChangeBack)
MOE <- qnorm(0.975)*s/sqrt(n)
upper <- meanCI + MOE
lower <- meanCI - MOE
colors <- c("slategray3", "dodgerblue4")
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
color = "black",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
color = "black",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
qnorm(0.975)
hist(DF$FoldChangeBack)
model <- aov(data=DF, formula = FoldChange ~ HealthStat)
summary(model)
model <- aov(data=DF, formula = FoldChange ~ HealthStat)
summary(model)
model <- aov(data=DF, formula = FoldChange ~ HealthStat + Gene)
summary(model)
model <- aov(data=DF, formula = FoldChange ~ HealthStat * Gene)
summary(model)
model <- aov(data=DF, formula = (FoldChange ~ HealthStat) * Gene)
model <- aov(data=DF, formula = FoldChange ~ HealthStat / Gene)
summary(model)
model <- aov(data=DF, formula = FoldChange ~ HealthStat; Gene)
model <- aov(data=DF, formula = FoldChange ~ HealthStat: Gene)
summary(model)
model <- aov(data=DF, formula = FoldChange ~ HealthStat - Gene)
summary(model)
model <- lm(data=DF, formula = FoldChange ~ HealthStat)
summary(model)
HealthStat <- rep(c("Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Healthy"),2)
ID <- rep(1:20, 2)
Location <- rep(c("I", "O", "I", "O", "O", "I", "O", "I", "O", "I"), 4)
FoldChange <- rnorm(40, mean = 0, sd = 2)
FoldChangeBack <- rnorm(40, mean = 0, sd = 2)
Gene <- c(rep("Gene1", 20), rep("Gene2", 20))
DF <- data.frame(ID, Gene, HealthStat, Loation, FoldChange, FoldChangeBack)
DF <- data.frame(ID, Gene, HealthStat, Location, FoldChange, FoldChangeBack)
DF1 <- ddply(DF, c("HealthStat", "Gene"), summarise,
n = length(FoldChange),
mean = mean(FoldChange, na.rm=TRUE),
sd = sd(FoldChange, na.rm=TRUE),
se = sd / sqrt(n))
meanCI <- mean(DF$FoldChangeBack)
n <- length(DF$FoldChangeBack)
s <- sd(DF$FoldChangeBack)
MOE <- qnorm(0.975)*s/sqrt(n)
upper <- meanCI + MOE
lower <- meanCI - MOE
colors <- c("slategray3", "dodgerblue4")
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
color = "black",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
DF1 <- ddply(DF, c("HealthStat", "Gene"), summarise,
n = length(FoldChange),
mean = mean(FoldChange, na.rm=TRUE),
sd = sd(FoldChange, na.rm=TRUE),
se = sd / sqrt(n))
HealthStat <- rep(c("Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Sick","Healthy","Sick","Healthy","Healthy","Sick","Healthy"),2)
ID <- rep(1:20, 2)
Location <- rep(c("I", "O", "I", "O", "O", "I", "O", "I", "O", "I"), 4)
FoldChange <- rnorm(40, mean = 0, sd = 2)
FoldChangeBack <- rnorm(40, mean = 0, sd = 2)
Gene <- c(rep("Gene1", 20), rep("Gene2", 20))
DF <- data.frame(ID, Gene, HealthStat, Location, FoldChange, FoldChangeBack)
DF1 <- ddply(DF, c("HealthStat", "Gene"), summarise,
n = length(FoldChange),
mean = mean(FoldChange, na.rm=TRUE),
sd = sd(FoldChange, na.rm=TRUE),
se = sd / sqrt(n))
meanCI <- mean(DF$FoldChangeBack)
n <- length(DF$FoldChangeBack)
s <- sd(DF$FoldChangeBack)
MOE <- qnorm(0.975)*s/sqrt(n)
upper <- meanCI + MOE
lower <- meanCI - MOE
colors <- c("slategray3", "dodgerblue4")
plot1 <- ggplot(DF1, aes(x=Gene,
y=mean,
fill=HealthStat)) +
geom_bar(stat="identity",
color = "black",
position=position_dodge()) + labs(x="Gene", y = "log(Fold Change)") + geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9))
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Health Status:") + theme(legend.position=c(.2, .85)) + coord_cartesian(ylim = c(-2, 2)) + annotate("segment", x = .5, xend = 2.5, y = meanCI, yend = meanCI, col = "red") + annotate("segment", x = .5, xend = 2.5, y = upper, yend = upper, col = "red", linetype = 2, size = 0.3) + annotate("segment", x = .5, xend = 2.5, y = lower, yend = lower, col = "red", linetype = 2, size = 0.3)
head(DF)
mod2 <- glmer(data=DF, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location), family = gaussian)
library(lme4)
mod2 <- glmer(data=DF, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location), family = gaussian)
summary(BQCVmod)
summary(mod2)
head(DF)
model <- aov(data=DF, formula = FoldChange ~ HealthStat)
summary(model)
library(lme4)
mod2 <- lmer(data=DF, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location))
summary(mod2)
nullMod <- lmer(data=DF, formula = FoldChange ~ 1 + (1|ID) + (1|Location))
fullMod <- lmer(data=DF, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location))
anova(nullMod, fullMod)
nullMod <- lmer(data=DF, formula = FoldChange ~ 1 + (1|ID) + (1|Location), REML = FALSE)
fullMod <- lmer(data=DF, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location), REML = FALSE)
anova(nullMod, fullMod)
splitDF <- split(DF, DF$Gene)
splitDF$Gene1
nullMod <- lmer(data=splitDF$Gene1, formula = FoldChange ~ 1 + (1|ID) + (1|Location), REML = FALSE)
nullMod <- lmer(data=splitDF$Gene1, formula = FoldChange ~ 1 + (1|ID) + (1|Location), REML = FALSE)
fullMod <- lmer(data=splitDF$Gene1, formula = FoldChange ~ HealthStat + (1|ID) + (1|Location), REML = FALSE)
splitDF
plot6 <- ggplot(DF, aes(Mass, fill=Origin))
library(ggplot2)
library(plyr)
ID <- c(1:200)
Origin <- c(rep("local", 100),
rep("California", 100))
FlowerType <- rep(c(rep("clover",25),
rep("goldenrod",25),
rep("treefoil",25),
rep("mixed",25)),2)
Mass <- c(rnorm(n = 100,
mean=32,
sd = 8), rnorm(n = 100,
mean=21,
sd=4))
NosemaLoad <-c(rnorm(n = 100,
mean=100000,
sd = 80000), rnorm(n = 100,
mean=500000,
sd=40000))
VarroaLoad <- c(rnorm(n = 100,
mean=5,
sd = 2), rnorm(n = 100,
mean=9,
sd=3))
Time <- rep(c(rep("Time1", 50), rep("Time2", 50)),2)
DF <- data.frame(ID, Origin, FlowerType, Mass, NosemaLoad, VarroaLoad, Time)
plot6 <- ggplot(DF, aes(Mass, fill=Origin))
plot6 + geom_histogram(alpha=0.2) + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass, fill=Origin, alpha=0.2))
plot6 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass))
plot6 + geom_histogram(fill=Origin, alpha=0.2) + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass))
plot6 + geom_histogram(data=subset(DF, Origin == "Local"), fill = "slategray3", alpha = 0.4) + geom_histogram(data=subset(DF, Origin == "California"), fill = "dodgerblue4", alpha = 0.4) + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass)) + geom_histogram(data=subset(DF, Origin == "Local"), fill = "slategray3", alpha = 0.4) + geom_histogram(data=subset(DF, Origin == "California"), fill = "dodgerblue4", alpha = 0.4)
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
subset(DF, Origin == "California")
plot6 <- ggplot(DF, aes(Mass, fill=Origin, alpha=0.2))
plot6 + geom_histogram() + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass, fill=Origin))
plot6 + geom_histogram(alpha=0.2, position="identity") + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass, fill=Origin))
+ geom_histogram(alpha=0.2, position="identity")
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2, position="identity")
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.8, position="identity")
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2, position="identity")
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17)
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2, position="identity") +
stat_bin(bins = 30)
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2, position="identity") +
stat_bin(bins = 30)
plot6
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2)
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17)
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2, position="identity")
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
plot6 <- ggplot(DF, aes(Mass, fill=Origin)) +
geom_histogram(alpha=0.2, aes(y = ..density..), position="identity")
plot6 + stat_bin(bins = 30) + theme_minimal(base_size = 17) + scale_fill_manual(values=colors)
Concentration <- c(rep("20%", 10), rep("10%", 10))
Concentration
Refractometer <- rep(c(rep("New", 5), rep("Old", 5)),2)
Refractometer
data <- data.frame(Refractometer, Concentration, RefReading)
RefReading <- c(12.5,12.5,12.5,12.5,12.5,10,10,10,10,10,21,21,22,21,21,18,19,19,19,19)
data <- data.frame(Refractometer, Concentration, RefReading)
data
Concentration <- c(rep("10%", 10), rep("20%", 10))
Refractometer <- rep(c(rep("New", 5), rep("Old", 5)),2)
RefReading <- c(12.5,12.5,12.5,12.5,12.5,10,10,10,10,10,21,21,22,21,21,18,19,19,19,19)
data <- data.frame(Refractometer, Concentration, RefReading)
data
Trial <- rep(c(1:5),4)
Concentration <- c(rep("10%", 10), rep("20%", 10))
Refractometer <- rep(c(rep("New", 5), rep("Old", 5)),2)
RefReading <- c(12.5,12.5,12.5,12.5,12.5,10,10,10,10,10,21,21,22,21,21,18,19,19,19,19)
data <- data.frame(Trial, Refractometer, Concentration, RefReading)
data
str(data)
mod <- aov(data, RefReading~Concentration + Refractometer)
mod <- aov(data = data, RefReading~Concentration + Refractometer)
summary(mod)
splitDat <- split(data, data$Concentration)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer)
mod <- aov(splitDat$20%$Concentration~splitDat$20%$Refractometer)
Trial <- rep(c(1:5),4)
Concentration <- c(rep("10", 10), rep("20", 10))
Refractometer <- rep(c(rep("New", 5), rep("Old", 5)),2)
RefReading <- c(12.5,12.5,12.5,12.5,12.5,10,10,10,10,10,21,21,22,21,21,18,19,19,19,19)
data <- data.frame(Trial, Refractometer, Concentration, RefReading)
mod <- aov(data = data, RefReading~Concentration + Refractometer)
summary(mod)
splitDat <- split(data, data$Concentration)
mod <- aov(splitDat$20$Concentration~splitDat$20$Refractometer)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer, data = splitDat$`20`)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer, data = splitDat$`20`)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer)
splitDat <- split(data, data$Concentration)
mod <- aov(splitDat$`20%`$Concentration~splitDat$`20%`$Refractometer)
Concentration <- c(rep("Ten", 10), rep("Twenty", 10))
Refractometer <- rep(c(rep("New", 5), rep("Old", 5)),2)
RefReading <- c(12.5,12.5,12.5,12.5,12.5,10,10,10,10,10,21,21,22,21,21,18,19,19,19,19)
data <- data.frame(Trial, Refractometer, Concentration, RefReading)
mod <- aov(data = data, RefReading~Concentration + Refractometer)
summary(mod)
splitDat <- split(data, data$Concentration)
mod <- aov(splitDat$Twenty$Concentration~splitDat$Twenty$Refractometer)
summary(mod)
summary(mod)
mod <- aov(splitDat$Twenty$RefReading~splitDat$Twenty$Refractometer)
summary(mod)
mod10 <- aov(splitDat$Ten$RefReading~splitDat$Ten$Refractometer)
summary(mod10)
splitDatConc <- split(data, data$Refractometer)
splitDatConc$New - splitDatConc$Old
splitDatConc$New$RefReading - splitDatConc$Old$RefReading
splitDatConc$New$RefReading
reading <- splitDatConc$New$RefReading - splitDatConc$Old$RefReading
conc <- c(rep("Ten",5), rep("Twenty",5))
df <- data.frame(conc, reading)
df
m <- aov(data=df, reading~conc)
summary(m)
mean(reading)
setwd("~/AlgerProjects/MigratoryStationary/Scripts")
setwd("~/AlgerProjects/MigratoryStationary/")
MigStat <- read.table("Data/MigratoryStationaryData.csv", header=TRUE, sep = ",", stringsAsFactors = FALSE)
MigStat
rm(list=ls())
setwd("~/AlgerProjects/MigratoryStationary/")
MigStat <- read.table("Data/MigratoryStationaryData.csv", header=TRUE, sep = ",", stringsAsFactors = FALSE)
MigStat
split(MigStat, MigStat$Treatment)
str(MigStat)
MigStat$NosemaLoad <- mean(MigStat$NosemaChamber1, MigStat$NosemaChamber2)
MigStat$NosemaLoad <- (MigStat$NosemaChamber1 + MigStat$NosemaChamber2)/2
MigStat$NosemaLoad
length(MigStat$VarroaLoad)
length(MigStat$Yard)
plot(MigStat$NosemaLoad, MigStat$VarroaLoad)
plot(log(MigStat$NosemaLoad), log(MigStat$VarroaLoad))
split(MigStat, MigStat$SamplingEvent)
MigStatSplit <- split(MigStat, MigStat$SamplingEvent)
mod <- aov(MigStatSplit$`2`$VarroaLoad~MigStatSplit$`2`$Treatment)
summary(mod)
mod <- aov(MigStatSplit$`1`$VarroaLoad~MigStatSplit$`2`$Treatment)
summary(mod)
mod <- aov(MigStatSplit$`1`$NosemaLoad~MigStatSplit$`1`$Treatment)
mod <- aov(MigStatSplit$`1`$NosemaLoad~MigStatSplit$`1`$Treatment)
summary(mod)
mod <- aov(MigStatSplit$`2`$NosemaLoad~MigStatSplit$`2`$Treatment)
summary(mod)
aov.out <- aov(NosemaLoad ~ Treatment * SamplingEvent + Error(ID), data=MigStat)
summary(aov.out)
Summary <- ddply(MigStat, c("Treatment", "Sampling Event"), summarise,
n = length(NosemaLoad),
mean = mean(NosemaLoad, na.rm = TRUE),
sd = sd(NosemaLoad, na.rm = TRUE),
se = sd / sqrt(n))
MigStat$
library(plyr)
library(ggplot2)
library(plyr)
Summary <- ddply(MigStat, c("Treatment", "Sampling Event"), summarise,
n = length(NosemaLoad),
mean = mean(NosemaLoad, na.rm = TRUE),
sd = sd(NosemaLoad, na.rm = TRUE),
se = sd / sqrt(n))
Summary <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(NosemaLoad),
mean = mean(NosemaLoad, na.rm = TRUE),
sd = sd(NosemaLoad, na.rm = TRUE),
se = sd / sqrt(n))
Summary
Summary[-c(1,3,6,9),]
Summary <- Summary[-c(1,3,6,9),]
plot <- ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black"))
plot <- ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3)
plot <- ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=pretty_breaks(n=5)) + labs(linetype="Queen Origin")
plot <- ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot
plot
plot <- ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(10,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
plot
plot <- ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(0,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 12), xlim = c(0,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 18), xlim = c(0,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
Summary
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Time (days after requeening)", y = "Varroa Load (mites/300 bees)") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.3)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black", "black")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "blue", "red")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "blue", "red")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "blue", "red")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
Summary <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(NosemaLoad),
mean = mean(NosemaLoad, na.rm = TRUE),
sd = sd(NosemaLoad, na.rm = TRUE),
se = sd / sqrt(n))
Summary
Summary <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(NosemaLoad),
mean = mean(NosemaLoad, na.rm = TRUE),
sd = sd(NosemaLoad, na.rm = TRUE),
se = sd / sqrt(n))
Summary <- Summary[-c(1,2,3,6,9),]
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "blue")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
Summary <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(VarroaLoad),
mean = mean(VorroaLoad, na.rm = TRUE),
sd = sd(VarroaLoad, na.rm = TRUE),
se = sd / sqrt(n))
Summary <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(VarroaLoad),
mean = mean(VarroaLoad, na.rm = TRUE),
sd = sd(VarroaLoad, na.rm = TRUE),
se = sd / sqrt(n))
Summary <- Summary[-c(1,2,3,6,9),]
ggplot(data = Summary,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "blue")) + labs(x = "Sampling Event", y = "Nosema Load") + coord_cartesian(ylim = c(0, 18), xlim = c(1,2)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Queen Origin")
ls()
rm(list=ls())
setwd("~/AndreCollaborations/QueenExperimentBurnham")
QueenDF <- read.table("2016QueensHam.csv", header=TRUE, sep = ",", stringsAsFactors = FALSE)
PollenDF <- read.table("PollenQueens.csv", header=TRUE, sep = ",")
VirusDF <- read.table("RNAVirus.csv", header=TRUE, sep = ",")
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(scales)
aov.out <- aov(Mass~Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
